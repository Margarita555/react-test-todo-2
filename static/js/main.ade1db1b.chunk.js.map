{"version":3,"sources":["components/Badge/Badge.jsx","assets/img/cross.svg","helpers/Constants.jsx","components/List/List.jsx","assets/img/close.svg","components/AddList/AddList.jsx","assets/img/edit.svg","assets/img/add.svg","components/Tasks/AddTaskForm.jsx","components/Tasks/Task.jsx","components/Tasks/Tasks.jsx","App.js","reportWebVitals.js","index.js"],"names":["Badge","color","onClick","className","classNames","JSON_API","List","items","isRemovable","onRemove","activeItem","onClickItem","map","item","index","active","id","icon","name","tasks","length","axios","delete","then","removeList","src","removeSvg","alt","AddList","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectedColor","selectColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","onChange","e","target","value","type","placeholder","colorId","data","console","log","post","find","c","listObj","catch","alert","finally","AddTaskForm","list","onAddTask","visibleForm","setVisibleForm","toggleVisibleForm","obj","disabled","addSvg","Task","text","completed","onEdit","onComplete","checked","htmlFor","Tasks","onEditTitle","onRemoveTask","onEditTask","onTaskComplete","to","style","textDecoration","hex","newTitle","window","prompt","patch","editSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","location","useLocation","get","listId","objTask","newLists","onEditListTitle","title","pathname","split","Number","newTaskText","taskId","confirm","filter","push","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ade1db1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Badge.scss';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst Badge = ({color, onClick, className}) => <i onClick={onClick} className={classNames('badge', {[`badge--${color}`]:color}, className)}></i>\r\n\r\nexport default Badge;\r\n\r\n","export default __webpack_public_path__ + \"static/media/cross.d1aeab96.svg\";","// export const JSON_API = 'https://react-todo-list-test.herokuapp.com/api'\r\n\r\nexport const JSON_API = 'https://my-json-server.typicode.com/margarita555/react-test-todo-2'\r\n\r\n// export const JSON_API = 'http://localhost:3004'","import removeSvg from '../../assets/img/cross.svg'\r\nimport './List.scss'\r\nimport classNames from 'classnames';\r\nimport Badge from '../Badge/Badge';\r\nimport axios from 'axios';\r\nimport {JSON_API} from '../../helpers/Constants'\r\n\r\nfunction List({ items, isRemovable, onClick, onRemove, activeItem, onClickItem }) {\r\n  // console.log(items)\r\n  const removeList = (item) => {\r\n    // if(window.confirm('Do you really want to remove the list?'))\r\n    axios.delete(`${JSON_API}/lists/` + item.id).then(() => {onRemove(item.id)})   \r\n  }\r\n\r\n\r\n  return <ul onClick={onClick}\r\n    className=\"list\">\r\n\r\n    {/* {console.log(items)} */}\r\n    {items.map((item, index) =>\r\n        \r\n      <li \r\n        key={index}\r\n        className={classNames(item.className, {\r\n        'active': item.active\r\n      ? item.active\r\n              : activeItem && activeItem.id === item.id})\r\n          }\r\n        onClick={onClickItem? () => onClickItem(item) : null}\r\n      >\r\n          \r\n          <i>{item.icon ? item.icon :\r\n            <Badge   color={item.color.name}/> }</i>\r\n \r\n        <span>{item.name}\r\n        {item.tasks && item.tasks.length > 0 && `(${item.tasks.length})`}</span>\r\n        {isRemovable &&\r\n          <img onClick={() => removeList(item)} className=\"list__remove-icon\" src={removeSvg} alt=\"Remove icon\" />}\r\n          </li>\r\n      )}\r\n         </ul>   \r\n}\r\n\r\nexport default List;\r\n","export default __webpack_public_path__ + \"static/media/close.b3bfafce.svg\";","import React, {useEffect, useState} from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport List from \"../List/List\";\r\nimport './AddList.scss'\r\nimport closeSvg from '../../assets/img/close.svg'\r\nimport axios from \"axios\";\r\nimport {JSON_API} from '../../helpers/Constants'\r\n\r\n\r\nconst AddList = ({colors, onAdd}) => {\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const [selectedColor, selectColor] = useState(3);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // console.log(inputValue)\r\n    // console.log(selectedColor)\r\n         \r\n    useEffect(() => {\r\n      if(Array.isArray(colors)){\r\n\r\n          selectColor(colors[0].id);\r\n      }\r\n    },[colors])\r\n\r\n    const onClose = () => { \r\n         setVisiblePopup(false);\r\n        setInputValue('');\r\n        selectColor(colors[0].id);     \r\n    }\r\n    \r\n    const addList = () => {\r\n      if (!inputValue) {\r\n            alert('Enter the name')\r\n            return\r\n        }\r\n        // const color = colors.find(c => c.id === selectedColor).name;\r\n        \r\n        axios.delete(`${JSON_API}/lists`,\r\n            { name: \"ss\",\r\n    colorId: \"blue\",\r\n    id: 7 })\r\n            .then(({ data }) => {\r\n                console.log(data)\r\n            })\r\n\r\n        setIsLoading(true);\r\n        axios.post(`${JSON_API}/lists`,\r\n            { name: inputValue, colorId: selectedColor })\r\n            .then(({ data }) => {\r\n                const color = colors.find(c => c.id === selectedColor);\r\n                const listObj = { ...data, color, tasks: [] };\r\n                onAdd(listObj);\r\n                onClose();\r\n            })\r\n            .catch(() => {\r\n            alert('Ошибка при добавлении списка')\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            })              \r\n        \r\n    }\r\n\r\n    return (<div className='add-list'>\r\n        <List\r\n            onClick={() => setVisiblePopup(true)}\r\n            items={[\r\n        {\r\n            className: 'list__add-button',\r\n            icon: <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M8 1V15\" stroke=\"#B4B4B4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                <path d=\"M1 8H15\" stroke=\"#B4B4B4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            </svg>,\r\n            name: 'Добавить список'\r\n        }\r\n    ]}\r\n        />\r\n        {visiblePopup && (\r\n            <div className=\"add-list__popup\">\r\n                <img onClick={onClose}\r\n                    className=\"add-list__popup-close-btn\" src={closeSvg} alt=\"cross\" />\r\n                \r\n                <input onChange={(e) => setInputValue(e.target.value)} className=\"field\" value={inputValue} type=\"text\" placeholder=\"Название списка\" />\r\n                \r\n                <div className=\"add-list__popup-colors\">                    \r\n                    {colors.map(color => (\r\n                        <Badge onClick={() => selectColor(color.id)}\r\n                            key={color.id}\r\n                            color={color.name}\r\n                            className={selectedColor === color.id && 'active'}\r\n                        />\r\n                    ))}\r\n               </div>\r\n                <button onClick={addList} className=\"button\">{isLoading ? 'Loading...' : 'Добавить'}</button>\r\n            </div>)\r\n        }\r\n    </div>   \r\n    );\r\n    \r\n}\r\n        \r\n\r\nexport default AddList","export default __webpack_public_path__ + \"static/media/edit.83c2f913.svg\";","export default __webpack_public_path__ + \"static/media/add.e6004eac.svg\";","import React, { useState } from 'react'\r\nimport './Tasks.scss';\r\nimport addSvg from '../../assets/img/add.svg'\r\nimport axios from 'axios';\r\nimport {JSON_API} from '../../helpers/Constants'\r\n\r\nexport default function AddTaskForm({list, onAddTask}) {\r\n    const [visibleForm, setVisibleForm] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const toggleVisibleForm = () => {\r\n        setVisibleForm(!visibleForm);\r\n        setInputValue('');\r\n    }\r\n    \r\n    const AddTask = () => {\r\n        console.log(list.id)\r\n        const obj = {\r\n            \"listId\": list.id,\r\n            \"text\": inputValue,\r\n            \"completed\": false\r\n           \r\n        }\r\n        setIsLoading(true)\r\n        axios.post(`${JSON_API}/tasks`, obj).then((data) => {\r\n            console.log(data)\r\n            onAddTask(list.id, data.data)\r\n            toggleVisibleForm()\r\n        }).catch(() => {\r\n            alert('Ошибка при добавлении задачи')\r\n        }).finally(() => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks__form\">\r\n            {!visibleForm ? \r\n            (<div onClick={toggleVisibleForm} className=\"tasks__form-new\">\r\n                <img src={addSvg} alt=\"Add icon\" />\r\n                <span >Новая задача</span>\r\n            </div>) :\r\n            (<div className=\"tasks__form-block\">\r\n                    <input onChange={(e) => setInputValue (e.target.value)} value={inputValue}\r\n                        className=\"field\" type=\"text\" placeholder=\"Текст задачи\" />\r\n                \r\n                    <button onClick={AddTask}\r\n                        className=\"button\" disabled={isLoading}>\r\n                        {isLoading ? \"Loading...\" : \"Добавить задачу\"}</button>\r\n                <button  onClick={toggleVisibleForm}className=\"button button--grey\">Отмена</button>\r\n            </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './Tasks.scss';\r\n\r\nconst Task = ({ id, text, completed, list, onRemove, onEdit, onComplete}) => {\r\n  \r\n  const onChangeCheckbox = (e) => {\r\n    onComplete(list.id, id, e.target.checked) \r\n  }\r\n \r\n    return ( <div className=\"tasks__items-row\">\r\n                    <div className=\"checkbox\">\r\n                        \r\n        <input onChange={onChangeCheckbox} id={`task-${id}`} type=\"checkbox\" checked={completed} />\r\n                        <label htmlFor={`task-${id}`} >\r\n                        <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"#B3B3B3\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            </svg>\r\n                        </label>\r\n                    </div>\r\n        <p>{text}</p>\r\n        \r\n        <div className=\"tasks__items-row-actions\">\r\n        <div onClick={(() => onEdit(list.id, {id, text}))}>\r\n          <svg\r\n            width=\"15\"\r\n            height=\"15\"\r\n            viewBox=\"0 0 15 15\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div onClick={(() => onRemove(list.id, id))}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"11\"\r\n            viewBox=\"0 0 11 11\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n                </div> )\r\n}\r\n\r\n\r\nexport default Task;","import React from 'react';\r\nimport './Tasks.scss';\r\nimport editSvg from '../../assets/img/edit.svg'\r\nimport axios from 'axios';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport Task from './Task';\r\nimport { Link } from 'react-router-dom';\r\nimport {JSON_API} from '../../helpers/Constants'\r\n\r\nexport default function Tasks({ list, onEditTitle, onAddTask, onRemoveTask, onEditTask, onTaskComplete }) {\r\n    // console.log(list.tasks)\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('Название списка', list.name)\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle);\r\n            axios.patch(`${JSON_API}/lists/` + list.id, {\r\n                name: newTitle\r\n            }).catch(() => {alert('Не удалось обновить название списка')})\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"tasks\">\r\n            <Link to={`/lists/${list.id}`} style={{ textDecoration: 'none' }}>\r\n            <h2 style={{color:list.color.hex}} className=\"tasks__title\">{list.name}\r\n                <img onClick={editTitle}\r\n                    src={editSvg} alt=\"Edit icon\" />\r\n            </h2>\r\n            </Link>\r\n            <div className=\"tasks__items\">\r\n                {console.log(list.tasks)}\r\n            {list.tasks && !list.tasks.length && <h2>Задачи  отсутствуют</h2> }\r\n                {list.tasks && list.tasks.map(task => (\r\n                    <Task key={task.id}\r\n                        list={list}\r\n                        onRemove={onRemoveTask}\r\n                        onEdit={onEditTask}\r\n                        onComplete={onTaskComplete}\r\n                        {...task}\r\n                        \r\n                    />\r\n                ))}\r\n                <AddTaskForm key={list.id}\r\n                    list={list}\r\n                    onAddTask={onAddTask} />\r\n                      \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport AddList from \"./components/AddList/AddList\";\r\nimport List from \"./components/List/List\";\r\n// import listSvg from './assets/img/list.svg'\r\n// import DB from './assets/db.json';\r\nimport Tasks from \"./components/Tasks/Tasks\";\r\nimport axios from 'axios';\r\nimport { Route, useHistory, useLocation } from 'react-router-dom';\r\nimport {JSON_API} from '../src/helpers/Constants'\r\n\r\n\r\nfunction App() {\r\n \r\n  const [lists, setLists] = useState(null);\r\n  const [colors, setColors] = useState(null);\r\n  const [activeItem, setActiveItem] = useState(null);\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  // console.log(lists)\r\n  // console.log(colors)\r\n   console.log(location)\r\n  \r\n  useEffect(() => {\r\n    axios.get(`${JSON_API}/lists?_expand=color&_embed=tasks`).then(({ data }) => {\r\n    \r\n      setLists(data)\r\n    });\r\n    axios.get(`${JSON_API}/colors`).then(({ data }) => {\r\n     \r\n      setColors(data)\r\n    });\r\n  }, []);\r\n  \r\n  const onAddList = (obj) => {\r\n    const newLists = [...lists, obj];\r\n    setLists(newLists);\r\n  }\r\n  \r\n  const onAddTask = (listId, objTask) => {\r\n    const newLists = lists.map(item => {\r\n      if (item.id === listId) {\r\n        item.tasks = [...item.tasks, objTask ]\r\n      }\r\n      return item\r\n    })\r\n    // console.log(newLists)\r\n    setLists(newLists);\r\n  }\r\n\r\n  // const onCompletedTask = (listId, taskId, completed) => {\r\n    \r\n  // }\r\n\r\n  const onEditListTitle = (id, title) => {\r\n    // console.log(id, title)\r\n    const newLists = lists.map(item => {\r\n      if (item.id === id) {\r\n        item.name = title\r\n      }\r\n      return item\r\n    })\r\n    setLists(newLists);\r\n  }\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    const listId = history.location.pathname.split('lists/')[1];\r\n    if (lists) {\r\n      const list = lists.find((list) => list.id === Number(listId))\r\n      setActiveItem(list)\r\n      // console.log(list)\r\n    }  \r\n  }, [lists, history.location.pathname])\r\n  \r\n\r\n  const onEditTask = (listId, objTask) => {\r\n    console.log(objTask)\r\n    console.log(objTask.id)\r\n    const newTaskText = window.prompt(\"Текст задачи:\", objTask.text);\r\n    if (!newTaskText) {\r\n      return\r\n    }\r\n    const newLists = lists.map(list => {\r\n      if (list.id === listId) {\r\n        list.tasks = list.tasks.map(task => {\r\n          if (task.id === objTask.id) {\r\n            task.text = newTaskText;\r\n          }\r\n          return task;\r\n        })\r\n      }\r\n      return list;\r\n    })\r\n    setLists(newLists);\r\n    console.log(objTask.id)\r\n    console.log(newTaskText)\r\n    // if(!objTask.id){}\r\n    \r\n    axios.patch(`${JSON_API}/tasks/` + objTask.id, { text: newTaskText })\r\n      .catch(() => {\r\n        alert('Error. The task was not saved. Try again')\r\n      })\r\n    \r\n  }\r\n\r\n  const onRemoveTask = (listId, taskId) => {\r\n    if (window.confirm(\"Do you really want to remove the task?\")) {\r\n      const newLists = lists.map(item => {\r\n         if(item.id === listId) {\r\n        item.tasks = item.tasks.filter(task => task.id !== taskId)\r\n        }\r\n        return item\r\n      })\r\n      setLists(newLists);\r\n\r\n      axios.delete(`${JSON_API}/tasks/` + taskId).catch(() => {\r\n        alert('Error. The task was not deleted')\r\n      }) \r\n    }\r\n  }\r\n\r\n  const onTaskComplete = (listId, taskId, completed) => {\r\n    console.log(completed)\r\n \r\n    const newLists = lists.map(list => {\r\n      if (list.id === listId) {\r\n        list.tasks = list.tasks.map(task => {\r\n          if (task.id === taskId) {\r\n            task.completed = completed;\r\n          }\r\n          return task;\r\n        })\r\n      }\r\n      return list;\r\n    })\r\n    setLists(newLists);\r\n    \r\n    axios.patch(`${JSON_API}/tasks/` + taskId, { completed })\r\n      .catch(() => {\r\n        alert('Error. The state of the checked task was not saved. Try again')\r\n      })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo__sidebar\">\r\n        \r\n        <List\r\n         onClickItem={(list) => {\r\n              history.push(`/`)\r\n            }}\r\n          items={[\r\n          {\r\n              icon: <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M10.96 5.10001H5.74001C5.24321 5.10001 5.20001 5.50231 5.20001 6.00001C5.20001 6.49771 5.24321 6.90001 5.74001 6.90001H10.96C11.4568 6.90001 11.5 6.49771 11.5 6.00001C11.5 5.50231 11.4568 5.10001 10.96 5.10001ZM12.76 9.60001H5.74001C5.24321 9.60001 5.20001 10.0023 5.20001 10.5C5.20001 10.9977 5.24321 11.4 5.74001 11.4H12.76C13.2568 11.4 13.3 10.9977 13.3 10.5C13.3 10.0023 13.2568 9.60001 12.76 9.60001ZM5.74001 2.40001H12.76C13.2568 2.40001 13.3 1.99771 13.3 1.50001C13.3 1.00231 13.2568 0.600006 12.76 0.600006H5.74001C5.24321 0.600006 5.20001 1.00231 5.20001 1.50001C5.20001 1.99771 5.24321 2.40001 5.74001 2.40001ZM2.86001 5.10001H1.24001C0.743212 5.10001 0.700012 5.50231 0.700012 6.00001C0.700012 6.49771 0.743212 6.90001 1.24001 6.90001H2.86001C3.35681 6.90001 3.40001 6.49771 3.40001 6.00001C3.40001 5.50231 3.35681 5.10001 2.86001 5.10001ZM2.86001 9.60001H1.24001C0.743212 9.60001 0.700012 10.0023 0.700012 10.5C0.700012 10.9977 0.743212 11.4 1.24001 11.4H2.86001C3.35681 11.4 3.40001 10.9977 3.40001 10.5C3.40001 10.0023 3.35681 9.60001 2.86001 9.60001ZM2.86001 0.600006H1.24001C0.743212 0.600006 0.700012 1.00231 0.700012 1.50001C0.700012 1.99771 0.743212 2.40001 1.24001 2.40001H2.86001C3.35681 2.40001 3.40001 1.99771 3.40001 1.50001C3.40001 1.00231 3.35681 0.600006 2.86001 0.600006Z\" fill=\"#7C7C7C\"/>\r\n</svg>,\r\n              name: 'Все задачи',\r\n              active: history.location.pathname === '/',\r\n            }\r\n        ]}\r\n        />\r\n        {lists ? (\r\n          <List items={lists}\r\n          onRemove={(id) => {\r\n            const newLists = lists.filter(item => item.id !== id);\r\n            setLists(newLists)\r\n          }}\r\n            onClickItem={(list) => {\r\n              history.push(`/lists/${list.id}`)\r\n            }}\r\n          activeItem={activeItem}\r\n        isRemovable\r\n        />) : ('Loading')}\r\n        <AddList onAdd={onAddList} colors={colors }/>\r\n      </div>\r\n      <div className=\"todo__tasks\">\r\n        <Route exact path=\"/\">Все списки:\r\n          {lists &&\r\n            lists.map((list) => (\r\n              <Tasks\r\n                key={list.id}\r\n                list={list}\r\n          onEditTitle={onEditListTitle}      \r\n          onAddTask={onAddTask}\r\n          onRemoveTask={onRemoveTask}\r\n                onEditTask={onEditTask}\r\n                onTaskComplete={onTaskComplete}\r\n          />)\r\n           )\r\n        }\r\n        </Route>\r\n        <Route path=\"/lists/:id\">\r\n        {lists && activeItem &&\r\n          <Tasks list={activeItem}\r\n          onEditTitle={onEditListTitle}      \r\n            onAddTask={onAddTask}\r\n            onRemoveTask={onRemoveTask}\r\n            onEditTask={onEditTask}\r\n            onTaskComplete={onTaskComplete}\r\n          />}\r\n        </Route>\r\n\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n// import './App.css';\r\n// import {AppHeader} from './components/Header/Header.module.css'\r\n// import ContactInfo from './components/ContactInfo';\r\n// import Header from './components/Header/Header';\r\n// import MyPhoto from './components/My-photo';\r\n// import Profile from './components/Profile';\r\n// import Skills from './components/Skills';\r\n// import { BrowserRouter, Route } from 'react-router-dom';\r\n// import Addition from './components/Addition';\r\n// import PageTwo from './components/PageTwo';\r\n\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <BrowserRouter>\r\n//       <div className='App-wrapper'>\r\n//         <div className={AppHeader}>\r\n//           <MyPhoto/>\r\n//           <Header />\r\n//         </div>\r\n        \r\n//         <ContactInfo />\r\n//         <div className=\"main\">\r\n//           <Skills />\r\n//           <div>\r\n//             <Addition/>\r\n//             {/* <Profile /> */}\r\n//             <Route path='/Profile' component={Profile} />\r\n//             <Route path='/PageTwo' component={PageTwo}/>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </BrowserRouter>\r\n//   )\r\n// }\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}